$ ->
  starControl.click (event) ->
    toggleVisibilityOfStarDiv()
  recentThoughtWallsLink.click (event) ->
    toggleVisibilityOfRecentThoughtWallsDiv()
    updateRecentThoughtWallsDiv()
  shareLinkControl.click (event) ->
    toggleVisibilityOfShareLinkDiv()
  themeSelectorLink.click (event) ->
    toggleVisibilityOfThemeSelectorDiv(event)
  focusOnNewThoughtText()
  
  $("body").delegate ".thought-history-link", "click", (event) ->
    toggleThoughtHistoryDisplay(this.getAttribute("id").split("-")[2])
  
  $("body").delegate "#thought_text", "keyup", (event) ->
    $('#thought-new-remaining-characters').html('remaining: ' + (maxThoughtLength - $('#thought_text').val().length))
        
  thoughtWallTitleInput.keyup ->
    $("#update_thought_wall_spinner").show()
    $("#collection-name").html($(this).val())
    delayAction (->
      $(".edit_thought_wall").submit()
      $("#update_thought_wall_spinner").hide()
    ), 100
    false
  
  window.getClientThoughtBoxOrder = () ->
    clientOrder = []
    $(".thought-box").each ->
      clientOrder.push @id.split("-")[2]
      
    return clientOrder
      
  window.correctFirstOutOfOrderThought = (clientOrder, serverOrder) ->
    index = 0
    index++  while index < clientOrder.length and clientOrder[index] is serverOrder[index]
    
    if index < clientOrder.length
      shiftThought($("#thought-box-" + serverOrder[index]).index(), index)
  
  window.correctFurthestOutOfOrderThought = (clientOrder, serverOrder) ->
    distances = []
    
    i = 0
    while i < clientOrder.length
      if (clientOrder[i] is serverOrder[i])
        distances.push(0)
      else
        distances.push(findDistanceBetweenClientAndServerOrders(i, clientOrder[i], serverOrder))
      i++
    
    fromIndex = indexOfMaxPositiveValue(distances)
    unless fromIndex is -1
      toIndex = serverOrder.indexOf(clientOrder[fromIndex])
      shiftThought($("#thought-box-" + clientOrder[fromIndex]).index(), toIndex)
    
  
  window.findDistanceBetweenClientAndServerOrders = (clientIndex, entryInQuestion, serverOrder) ->
    index = 0
    index++ while index < serverOrder.length && serverOrder[index] != entryInQuestion
  
    if (index is serverOrder.length)
      return -1
    else
      return Math.abs(clientIndex - index)
    
  $(document).ready ->
    if (supportsHtml5Storage())
      makeSureLocalStorageHasAtLeastDefaultValues()
      $('body').addClass(localStorage["preferredTheme"])
    else
      $('body').addClass('theme-canvas')
        
    $('#thought-list').sortable({
      start: (event, ui) ->
        $('#safe-to-alter-layout').html('false')
      stop: (event, ui) -> 
        thoughtBoxIdParts = ui.item[0].getAttribute("id").split('-')
        backendID = thoughtBoxIdParts[thoughtBoxIdParts.length-1]
        $.ajax({
          type: "POST",
          url: '/thoughts/'+backendID+'.js',
          data: { _method:'PUT', thought: { ui_position: ui.item.index() } }
        })
        $('#safe-to-alter-layout').html('true')
    })
    
    